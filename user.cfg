###############################################################################
# User Options
###############################################################################

CHIP  = 8266
IP    = 192.168.4.1     # does not actually set the IP in firmware
PORT  = /dev/ttyUSB0    # could also be /dev/ttyACM0
WEB_PORT     = 80
COM_PORT     = 7777
BACKEND_PORT = 7878
PAGE_OFFSET  = 65536     # 1048576

SDK_DEFAULT  = $(HOME)/esp8266/esp-open-sdk
ESP_GCC_VERS = 4.8.5

OPTS += -DICACHE_FLASH
#OPTS += -DSK6812
#OPTS += -DWS_SLEEP=14000
#OPTS += -DVERIFY_FLASH_WRITE
#OPTS += -DDEBUG
#OPTS += -DFREQ=12500

PAGE_TITLE = Lukas &amp; Miriam 2016
PAGE_SCRIPTS = $(wildcard page/*.js) # main.js
PAGE_HEADING = $(PAGE_TITLE)
PAGE_INFO = <p>Alles Liebe zu eurer Hochzeit!</p><p>Moege Euch dieses Licht so manch romatische Stunde erhellen.</p><hr><p>Welcome to the esp8266ws2812i2s Web-based GUI.</p><p>This GUI uses WebSockets, and has only been tested under the newest (as of April, 2016) Chrome and Firefox browsers.</p><p>For more information about this project, visit it on github, here: <a href=https://github.com/con-f-use/esp82XX-basic>https://github.com/con-f-use/esp82XX-basic</a></p><p>If you want to send light to this device, send a UDP packet to port $(COM_PORT) to it.  The first 3 bytes will be ignored, after that will be GRB values, one byte each, for each WS2812 LED you want to control</p>
